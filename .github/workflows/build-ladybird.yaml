name: Build Ladybird

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Install dependencies
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            ninja-build \
            cmake \
            build-essential \
            git \
            libicu-dev \
            libfontconfig1-dev \
            libfreetype6-dev \
            libpng-dev \
            libjpeg-dev \
            libwebp-dev \
            python3 \
            python3-pip \
            curl \
            pkg-config \
            libgl1-mesa-dev

      # Step 3: Cache Skia Build
      - name: Cache Skia Build
        uses: actions/cache@v3
        with:
          path: skia
          key: skia-m129-${{ runner.os }}
          restore-keys: |
            skia-m129-

      # Step 4: Build and Install Skia
      - name: Build and Install Skia
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          git clone https://github.com/google/skia.git
          cd skia
          git checkout m129  # Adjust to required version
          python3 tools/git-sync-deps
          mkdir -p out/Release
          gn gen out/Release --args="is_official_build=true is_debug=false skia_use_system_freetype2=true"
          ninja -C out/Release
          sudo cp -r include /usr/local/
          sudo cp out/Release/*.a /usr/local/lib/
          cd ..
        # If Skia is already cached, the "if" statement ensures it skips rebuilding.

      # Step 5: Cache Skia Installation
      - name: Cache Skia Installation
        uses: actions/cache@v3
        with:
          path: /usr/local
          key: skia-install-${{ runner.os }}
          restore-keys: |
            skia-install-

      # Step 6: Build Ladybird
      - name: Build Ladybird
        run: |
          mkdir -p $HOME/build
          cd $HOME/build
          git clone --recurse-submodules https://github.com/Ladybird-browser/Ladybird.git
          cd Ladybird
          cmake -B Build/release -GNinja
          cmake --build Build/release
